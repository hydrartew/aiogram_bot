import datetime

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command
from aiogram.types import CallbackQuery

from lib import db_changes, db_selection
from keyboards.inline import ikb_support, start_menu
from loader import dp
from states import Registration
from utils.misc import rate_limit


@rate_limit(limit=5)  # –∞–Ω—Ç–∏—Å–ø–∞–º
@dp.message_handler(Command('start'))  # /start
async def user_register(message: types.Message):
    exist = await db_selection.exist_registration(message.from_user.id)

    if exist is True:
        await message.answer_animation(
            animation='CgACAgQAAxkBAAIVN2SlthgpebCfMl3Jc9w6rCp6VRcEAAI9AwACacEEU7o3VC5PLfGgLwQ',
            caption='–ü—Ä–∏–≤–µ—Ç, —è low_botüôà. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –º–æ—é —Å—É—â–Ω–æ—Å—Ç—å, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É‚¨áÔ∏è',
            reply_markup=start_menu)
        # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 1 —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await Registration.login.set()
    else:
        if exist == 'created':
            await message.answer('–¢—ã —É–∂–µ –ø–æ–¥–∞–ª –∑–∞—è–≤–∫—Éü§ù –î–æ–∂–¥–∏—Å—å —Ä–µ—à–µ–Ω–∏—èüôÑ')
        elif exist == 'accepted':
            await message.answer('–¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ωü•≥')
        elif exist == 'cancelled':
            await message.answer('–ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞‚õîÔ∏èüò¢', reply_markup=ikb_support)


@dp.callback_query_handler(text='—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', state=Registration.login)
async def get_login(call: CallbackQuery, state: FSMContext):
    await call.message.delete()  # —É–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

    fullname = call.from_user.first_name
    login = call.from_user.username

    if call.from_user.last_name is not None:  # –µ—Å–ª–∏ –µ—Å—Ç—å —Ñ–∞–º–∏–ª–∏—è, –¥–æ–±–∞–≤–∏—Ç—å –µ—ë –∫ –∏–º–µ–Ω–∏
        fullname += ' ' + call.from_user.last_name

    await db_changes.new_registration((str(call.from_user.id), login, fullname, 'created',
                                       str(datetime.datetime.now().strftime("%d.%m.%y %H:%M:%S")),))

    await call.message.answer(f'@{login}, —Ç—ã –ø–æ–¥–∞–ª –∑–∞—è–≤–∫—Éü´° –∫–æ–≥–¥–∞ –∞–¥–º–∏–Ω —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç –µ—ë, —Ç–µ–±–µ –ø—Ä–∏–¥—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–µüòá')

    await state.finish()
